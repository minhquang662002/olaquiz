// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  firstName String
  lastName  String
  avatar    String   @default("https://gamek.mediacdn.vn/133514250583805952/2021/12/1/photo-1-1638349281733769557330.png")
  email     String
  password  String
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  USER
  ADMIN
}

model Post {
  id         String   @id @default(uuid())
  title      String
  category   Category @relation(fields: [categoryId], references: [id])
  image      String
  summary    String
  content    String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  categoryId String
}

model Vocabulary {
  id         String @id @default(uuid())
  image      String
  word       String
  spelling   String
  definition String
  example    String
  audio      String
}

model Topic {
  id         String   @id @default(uuid())
  title      String
  category   Category @relation(fields: [categoryId], references: [id])
  image      String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  categoryId String

  @@unique([title])
}

model Category {
  id    String       @id @default(uuid())
  name  String
  url   String
  type  CategoryType
  Post  Post[]
  Topic Topic[]

  @@unique([url])
  @@unique([name])
}

enum CategoryType {
  VOCABULARY
  POST
}

// model Test {
//   test_id   String     @id @default(uuid())
//   test_type TestType
//   test_name String
//   createdAt DateTime   @default(now())
//   updatedAt DateTime   @updatedAt
//   Question  Question[]
// }

// enum TestType {
//   READING
//   LISTENING
// }

// model Question {
//   question_id String   @id @default(uuid())
//   image       String
//   audio       String
//   question    String
//   option_1    String
//   option_2    String
//   option_3    String
//   option_4    String
//   answer      String
//   createdAt   DateTime @default(now())
//   updatedAt   DateTime @updatedAt
//   test        Test     @relation(fields: [test_id], references: [test_id])
//   test_id     String
// }

// model Exam {
//   exam_id   String   @id @default(uuid())
//   exam_type TestType
//   exam_name String
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
// }

// model ExamQuestion {
// }
